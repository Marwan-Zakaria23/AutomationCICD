<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="8" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-22T14:27:03 EEST" name="Suite" finished-at="2024-07-22T14:28:08 EEST" duration-ms="65098">
    <groups>
      <group name="purchase">
        <method signature="StandAloneTest.FirstTest(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" name="FirstTest" class="RahulShettyAcademy.Tests.StandAloneTest"/>
      </group> <!-- purchase -->
      <group name="errorHandling">
        <method signature="errorValidation.errorMessagetest()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" name="errorMessagetest" class="RahulShettyAcademy.Tests.errorValidation"/>
      </group> <!-- errorHandling -->
    </groups>
    <test started-at="2024-07-22T14:27:03 EEST" name="Sumit Order" finished-at="2024-07-22T14:27:43 EEST" duration-ms="39408">
      <class name="RahulShettyAcademy.Tests.StandAloneTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:04 EEST" name="launchApplication" finished-at="2024-07-22T14:27:13 EEST" duration-ms="9291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="FirstTest(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:13 EEST" name="FirstTest" data-provider="getData" finished-at="2024-07-22T14:27:19 EEST" duration-ms="6252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ADIDAS ORIGINAL, password=Liverpool@239, email=marwan23@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:19 EEST" name="tearDown" finished-at="2024-07-22T14:27:21 EEST" duration-ms="1857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:21 EEST" name="launchApplication" finished-at="2024-07-22T14:27:26 EEST" duration-ms="5173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="FirstTest(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:26 EEST" name="FirstTest" data-provider="getData" finished-at="2024-07-22T14:27:32 EEST" duration-ms="5318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=IPHONE 13 PRO, password=Marwan@239, email=marwan9@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:32 EEST" name="tearDown" finished-at="2024-07-22T14:27:32 EEST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:32 EEST" name="launchApplication" finished-at="2024-07-22T14:27:36 EEST" duration-ms="4257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:36 EEST" name="orderHistoryTest" data-provider="getData" finished-at="2024-07-22T14:27:37 EEST" depends-on-methods="RahulShettyAcademy.Tests.StandAloneTest.FirstTest" duration-ms="1133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=ADIDAS ORIGINAL, password=Liverpool@239, email=marwan23@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:37 EEST" name="tearDown" finished-at="2024-07-22T14:27:37 EEST" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:37 EEST" name="launchApplication" finished-at="2024-07-22T14:27:42 EEST" duration-ms="4340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistoryTest(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:42 EEST" name="orderHistoryTest" data-provider="getData" finished-at="2024-07-22T14:27:43 EEST" depends-on-methods="RahulShettyAcademy.Tests.StandAloneTest.FirstTest" duration-ms="1043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{productname=IPHONE 13 PRO, password=Marwan@239, email=marwan9@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@503ecb24]" started-at="2024-07-22T14:27:43 EEST" name="tearDown" finished-at="2024-07-22T14:27:43 EEST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RahulShettyAcademy.Tests.StandAloneTest -->
    </test> <!-- Sumit Order -->
    <test started-at="2024-07-22T14:27:43 EEST" name="error validation test" finished-at="2024-07-22T14:28:08 EEST" duration-ms="25387">
      <class name="RahulShettyAcademy.Tests.errorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:27:43 EEST" name="launchApplication" finished-at="2024-07-22T14:27:50 EEST" duration-ms="7173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="WrongProduct()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:27:50 EEST" name="WrongProduct" finished-at="2024-07-22T14:27:54 EEST" duration-ms="4035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WrongProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:27:54 EEST" name="tearDown" finished-at="2024-07-22T14:27:55 EEST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:27:55 EEST" name="launchApplication" finished-at="2024-07-22T14:28:00 EEST" duration-ms="5134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="errorMessagetest()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:28:00 EEST" name="errorMessagetest" finished-at="2024-07-22T14:28:01 EEST" duration-ms="1567" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at RahulShettyAcademy.Tests.errorValidation.errorMessagetest(errorValidation.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMessagetest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:28:01 EEST" name="tearDown" finished-at="2024-07-22T14:28:01 EEST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:28:01 EEST" name="launchApplication" finished-at="2024-07-22T14:28:07 EEST" duration-ms="5887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="errorMessagetest()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:28:07 EEST" name="errorMessagetest" finished-at="2024-07-22T14:28:08 EEST" duration-ms="684" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email  password.] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email  password.] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at RahulShettyAcademy.Tests.errorValidation.errorMessagetest(errorValidation.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- errorMessagetest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RahulShettyAcademy.Tests.errorValidation@49c6c24f]" started-at="2024-07-22T14:28:08 EEST" name="tearDown" finished-at="2024-07-22T14:28:08 EEST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RahulShettyAcademy.Tests.errorValidation -->
    </test> <!-- error validation test -->
  </suite> <!-- Suite -->
</testng-results>
